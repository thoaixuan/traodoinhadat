var optionDelete ={
	title:"Thông báo",
	body:"Có chắc chắn muốn xóa không !",
	textCancel:"Hủy bỏ",
	textConfirm:"Xắc nhận",
	method:'POST',
	url:'',
	data:{},
	table:null,
    emptyEL:null,
    removeEL:null,
    reload:false
}
function merge(a, b) {
	return $.merge($.merge([], a), b);
}
function numberSeparator(Number) {
	var commaCounter = 10;
	Number += '';
	for (var i = 0; i < commaCounter; i++) {
		Number = Number.replace(',', '');
	}

	x = Number.split('.');
	y = x[0];
	z = x.length > 1 ? '.' + x[1] : '';
	var rgx = /(\d+)(\d{3})/;

	while (rgx.test(y)) {
		y = y.replace(rgx, '$1' + ',' + '$2');
	}
	commaCounter++;
	return y + z;
}
function _modalDelete(obj) {
    console.log(obj);
	if(obj!=undefined){
		if(obj.title!=undefined){
			optionDelete.title = obj.title;
		}
		if(obj.body!=undefined){
			optionDelete.body = obj.body;
		}
		if(obj.textCancel!=undefined){
			optionDelete.textCancel = obj.textCancel;
		}
		if(obj.textConfirm!=undefined){
			optionDelete.textConfirm = obj.textConfirm;
		}
		if(obj.method!=undefined){
			optionDelete.method = obj.method;
		}
        if(obj.type!=undefined){
			optionDelete.method = obj.type;
		}
		if(obj.url!=undefined){
			optionDelete.url = obj.url;
		}
		if(obj.data!=undefined){
			optionDelete.data = obj.data;
		}
		if(obj.table!=undefined){
			optionDelete.table = obj.table;
		}
        if(obj.removeEL!=undefined){
			optionDelete.removeEL = obj.removeEL;
		}
        if(obj.emptyEL!=undefined){
			optionDelete.emptyEL = obj.emptyEL;
		}
        if(obj.reload!=undefined){
            optionDelete.reload = obj.reload;
        }
		if(optionDelete.url==''){
			$("#errorAlert").remove();
			var html='<div class="alert alert-danger" id="errorAlert">'
				html+='<button type="button" class="close" data-dismiss="alert"><i class="ace-icon fa fa-times"></i></button>';
				html+='Chưa có data ! _modalDelete({..})';
			html+='</div>';
			$("#delete-body").prepend(html);
			$("#modalDelete").modal('show');
		}else{
			$("#delete-title").html(optionDelete.title);
			$("#delete-body").html(optionDelete.body);
			$("#delete-button-cancel").html(optionDelete.textCancel);
			$("#delete-button-confirm").html(optionDelete.confirm);
			$("#modalDelete").modal('show');
		}
	}else{
		alert("Chưa có data ! _modalDelete({..})");
		return;
	}

}
function _modalError500(error){
	console.log(error);
	$("#errorAlert").remove();
	if(error.responseJSON.message==''){
		error.responseJSON.message = error.statusText
	}
	var html='<div class="alert alert-danger" id="errorAlert">'
		html+='<button type="button" class="close" data-dismiss="alert"><i class="ace-icon fa fa-times"></i></button>';
		html+=error.responseJSON.message;
	html+='</div>';
	$(".modal-body").prepend(html);
}
function _buttonActionDropdown(data){

	var htmlButton='<div class="btn-group ">';
		htmlButton+='<button data-toggle="dropdown" class="btn btn-info btn-white dropdown-toggle" aria-expanded="true">	<i class="fa fa-cog"></i></button>';
		htmlButton+='<ul class="dropdown-menu dropdown-info dropdown-menu-right">';
			 $.each(data,function(index,item){
				if(item.icon==undefined){
					item.icon = '';
				}
				if(item.title==undefined){
					item.title = item.text;
				}
                htmlButton+='<li><button class="btn btn-xs btn-block  '+item.class+'" '+item.attr+'  value="'+item.value+'" title="'+item.title+'">'+item.icon+'&nbsp;'+item.text+'</button></li>';
            });
		htmlButton+='</ul>';
	 htmlButton+='</div>';
    return htmlButton;
}
function _buttonActionButton(data){
		var htmlButton='<div class="btn-group">'
			 $.each(data,function(index,item){
				if(item.icon==undefined){
					item.icon = '';
				}
				if(item.text==undefined){
					item.text = '';
				}
				if(item.title==undefined){
					item.title = item.text;
				}
				htmlButton+='<button class="btn btn-xs  '+item.class+'" '+item.attr+'  value="'+item.value+'" title="'+item.title+'">'+item.icon+'&nbsp;'+item.text+'</button></li>';
			 });
		htmlButton+='</div>';
		return htmlButton;
}
function _showError(er,form){
	if(form==undefined){form ="";}
	$(".is-invalid").addClass('is-valid');
	$(".is-invalid").removeClass('is-invalid');
	$(".invalid-feedback").remove();
	if(er.status==422 ){
		var errors = er.responseJSON.errors;
		$.each(errors,function(key,value){
			var input = 	$(form+" input[name="+key+"]");
			var textarea = 	$(form+" textarea[name="+key+"]");
			var select = 	$(form+" select[name="+key+"]");
			if(input){
				input.addClass('is-invalid');
				if(input.parent('.form-group')){
					input.parent('.form-group').append('<span  class="error invalid-feedback"><i class="far fa-times-circle"></i> '+value[0]+'</span>');
				}
				if(input.parent('.input-group').parent('.form-group')){
					input.parent('.input-group').parent('.form-group').append('<span  class="error invalid-feedback"><i class="far fa-times-circle"></i> '+value[0]+'</span>');
				}

			}else{
				$(input).removeClass('is-invalid');
			}
			if(textarea){
				textarea.addClass('is-invalid');
				if(textarea.parent('.form-group')){
					textarea.parent('.form-group').append('<span  class="error invalid-feedback"><i class="far fa-times-circle"></i> '+value[0]+'</span>');
				}else if(textarea.parent('.input-group').parent('.form-group')){
					textarea.parent('.input-group').parent('.form-group').append('<span  class="error invalid-feedback"><i class="far fa-times-circle"></i> '+value[0]+'</span>');
				}
			}else{
				$(textarea).removeClass('is-invalid');
			}
			if(select){
				select.addClass('is-invalid');
				if(select.parent('.form-group')){
					select.parent('.form-group').append('<span  class="error invalid-feedback"><i class="far fa-times-circle"></i> '+value[0]+'</span>');
				}else if(select.parent('.input-group').parent('.form-group')){
					select.parent('.input-group').parent('.form-group').append('<span  class="error invalid-feedback"><i class="far fa-times-circle"></i> '+value[0]+'</span>');
				}
			}else{
				$(select).removeClass('is-invalid');
			}
            if(input){
				input.addClass('is-invalid');
				if(input.parent('.form-group')){
					input.parent('.md-div').append('<span  class="error invalid-feedback"><i class="far fa-times-circle"></i> '+value[0]+'</span>');
				}
				if(input.parent('.md-div').parent('.form-group')){
					input.parent('.md-div').parent('.form-group').append('<span  class="error invalid-feedback"><i class="far fa-times-circle"></i> '+value[0]+'</span>');
				}

			}else{
				$(input).removeClass('is-invalid');
			}
		});
	}
}
function reloadTable(e){
	$(e).DataTable().ajax.reload();
}
function buttonloading(e, type) {
    if (type == true) {
        console.log(type);
		if (!$(e).children("span").hasClass("loadding")) {
			$(e).attr("disabled", type);
            $(e).prepend('<span  class="loadding spinner-border spinner-border-sm mr-1"></span>');
			$(e).children('i').hide();
		}
	} else {
        console.log(type);

		if ($(e).children("span").hasClass("loadding")) {
			$(e).children("span").remove();
			$(e).attr("disabled", type);
			$(e).children('i').show();
		}
	}
}
function echo(e){
    if(e==null||e==''){
        return '';
    }else{
        return e;
    }
}
function input_money_format(e) {
$(e).val($(e).val().replace(/\D/gm, ""));
var val = $(e).val().split(",").join("");
e.value = val.toString().split(/(?=(?:\d{3})+(?:\.|$))/g).join(",");
}
function money_format_to_number(e) {
    if(e==null||e==''){
        return '';
    }else{
        return parseFloat(e.toString().replace(/,/g, ""));
    }
}
function money_format(e) {
    if(e==null||e==''){
        return '';
    }else{
	    return e.toString().split(/(?=(?:\d{3})+(?:\.|$))/g).join(",");
    }
}
function thongbao(icon,messages){
    Toast.fire({
        icon: icon,
        title:messages
    });
}
function null_to_number(e){
    if(e==null||e=='null'){
        return 0;
    }else{
        return e;
    }
}
function init_tinymce(selector, min_height) {
	var menu_bar = "file edit view insert format tools table help";
	if (selector == ".tinyMCEQuiz") {
		menu_bar = false;
	}
	tinymce.init({
		// inline: true,
		selector: selector,
		min_height: min_height,
		valid_elements: "*[*]",
		relative_urls: false,
		remove_script_host: false,
		language: "vi",
		menubar: menu_bar,
		plugins: [
			"advlist autolink lists link image charmap print preview anchor",
			"searchreplace visualblocks code codesample fullscreen",
			"insertdatetime media table paste imagetools",
		],
		toolbar:
			"fullscreen code preview | bold italic underline strikethrough | alignleft aligncenter alignright alignjustify | numlist bullist | forecolor backcolor removeformat | image media link | outdent indent",
		content_css: [editor_content_css],
		codesample_languages: [
			{ text: "HTML/XML", value: "markup" },
			{ text: "JavaScript", value: "javascript" },
			{ text: "CSS", value: "css" },
			{ text: "PHP", value: "php" },
			{ text: "Ruby", value: "ruby" },
			{ text: "Python", value: "python" },
			{ text: "Java", value: "java" },
			{ text: "C", value: "c" },
			{ text: "C#", value: "csharp" },
			{ text: "C++", value: "cpp" },
		],
	});
	tinymce.DOM.loadCSS(editor_ui_css);
}
function changeDarkMode(url,type){
    $.ajax({
        url:url,
        type:'POST',
        dataType:'JSON',
        data:{type:type},
        success:function(data){

        },error:function(error){

        }
    });
}
function readImage(inputElement) {
	// console.log(inputElement);
    var deferred = $.Deferred();
    var files = inputElement.get(0).files;
    if (files && files[0]) {
        var fr = new FileReader();
        fr.onload = function (e) {
            deferred.resolve(e.target.result);
        };
        fr.readAsDataURL(files[0]);
    } else {
        deferred.resolve(undefined);
    }
    return deferred.promise();
}
function setImgSRC(InputFile, img) {
    readImage($(InputFile)).done(function (base64Data) {
        $(img).attr('src', base64Data);
    });
}
function setImgAttr(InputFile, elm) {
    readImage($(InputFile)).done(function (base64Data) {
        $(elm).attr('style',"background-image: url("+base64Data+")");
    });
}
function colorStatus(e){

    if(e=='1') return "text-primary";
    if(e=='2') return "text-danger";
    if(e=='3') return "text-done";
    return "";
}
function alertJS(message,type) {
    var alerthtml = '<div class="alert alert-'+type+' text-small alert-dismissible" role="alert">';
    alerthtml += '' + message + '';
    alerthtml += '<button type="button" class="close" data-dismiss="alert" >';
    // alerthtml += '<span aria-hidden="true">&times;</span>';
    alerthtml += '</button>';
    alerthtml += '</div>'
    return alerthtml;
}
function removeEL() {
    if(optionDelete.removeEL!=null){
        $(optionDelete.removeEL).remove();
    }
}
function emptyEL() {
    if(optionDelete.emptyEL!=null){
        $(optionDelete.emptyEL).empty();
    }
}
function reloadPage() {
    if(optionDelete.reload==true){
        location.reload();
    }
}
function AntispamJS(jsonData){
    // console.log(jsonData);
    var formData = new FormData($(jsonData.form)[0]);
    formData.append('resultAntispam',jsonData.resultAntispam);
    formData.append('resultMath',jsonData.resultMath);
    buttonloading(jsonData.button,true);
    $.ajax({
        url:jsonData.url,
        type: "POST",
        data:formData,
        dataType:'JSON',
        processData: false,
        contentType: false,
        success: function(data){
            if(data.status === 'success'){
                var i=0;
                $(jsonData.alertJS).html(alertJS(data.msg,'success'));
                setInterval(function(){
                    i++;
                    $(jsonData.alertJS).html(alertJS("Vui lòng chờ 🕚 : "+i,'info'));
                    if(i==3){
                        location.reload();
                    }
                },1000)
            }else if(data.status === 'antispam'){
                $("#antispam").modal({backdrop:'static',keyboard:true});
                buttonloading(jsonData.button,false);
                _showError("",jsonData.form);
            }else if(data.status === 'antispam_check'){
                $(jsonData.alertJS).html(alertJS(data.msg,'danger'));
                buttonloading(jsonData.button,false);
            }
            else
                $(jsonData.alertJS).html(alertJS(data.msg,'danger'));
                buttonloading(jsonData.button,false);
                _showError("",jsonData.form);
            },error: function(er){
                buttonloading(jsonData.button,false);
                if(er.responseJSON.errors.body!=undefined){
                    $(jsonData.alertJS).html(alertJS(er.responseJSON.errors.body[0],'warning'));
                }else if(er.responseJSON.errors.email!=undefined){
                    $(jsonData.alertJS).html(alertJS(er.responseJSON.errors.email[0],'warning'));
                }
                else{
                    $(jsonData.alertJS).empty();
                }
                _showError(er,jsonData.form);
            }
    });
}
$(document).ready(function() {
    $.ajaxSetup({ headers: { "X-CSRF-TOKEN": $('meta[name="csrf-token"]').attr("content") } });
    $("#Antispam-form-confirm").on('submit',function(e){
        buttonloading("#Antispam-button-confirm",true);
        e.preventDefault();
        AntispamJSON.button = "#Antispam-button-confirm";
        AntispamJSON.resultMath = $("#resultMath").val();
        AntispamJSON.alertJS = "#alertJSAntispam";
        AntispamJS(AntispamJSON);
    });
    $('.count').each(function () {
        $(this).prop('Counter', 0).animate({
                Counter: $(this).text()
        }, {
            duration: 1000,
            easing: 'swing',
            step: function (now) {
                    $(this).text(Math.ceil(now));
            }
        });
    });
	var pathname = window.location.href;
    console.log(pathname);
    var elmParent =  $('.nav-sidebar > .nav-item  > a[href="'+pathname+'"]');
    elmParent.addClass('active');
    console.log(elmParent);
    var elmParent =  $('.nav-treeview > .nav-item > a[href="'+pathname+'"]');
    elmParent.addClass('active')
    elmParent.parents('.has-treeview').children().addClass('active')
    elmParent.parents('.has-treeview').addClass('active menu-open')
    elmParent.parent().parent().attr('style','display: block;').parent().addClass('active');
    elmParent.addClass('active ');
	$("#delete-button-confirm").on('click',function(){
		buttonloading('#delete-button-confirm',true);
		$.ajax({
			url:optionDelete.url,
			type:optionDelete.method,
			dataType:'JSON',
			data:optionDelete.data,
			success:function(data) {
				buttonloading('#delete-button-confirm',false);
				if(data.status=='success'){
                    reloadTable(optionDelete.table);
					$("#modalDelete").modal('hide');
                    emptyEL();
                    removeEL();
                    reloadPage();
				}else if(data.status=='error'){

				}
			},error:function(error){
				console.log(error);
				buttonloading('#delete-button-confirm',false);
				_modalError500(error);
			}
		});
	});
    $(".button-logout").on('click',function(e){
        e.preventDefault();
		$.ajax({
			url:$(this).attr('href'),
			type:'GET',
			dataType:'JSON',
			success:function(data) {
                location.reload();
			},error:function(error){
                alert("Not logout !")
			}
		})
	});
    $("#form-login").on('submit',function(e){
        var formData = new FormData(this);
        e.preventDefault();
        $("#alertJSLogin").empty();
        buttonloading("#login-normal",true);
        $.ajax({
            url:$("#login-normal").attr('data-url'),
            type: "POST",
            data:formData,
            dataType:'JSON',
            processData: false,
            contentType: false,
            success: function(data){
                if(data.status === 'success'){
                        buttonloading("#login-normal",false);
                        return location.reload();
                }else if(data.status === 'error'){
                        buttonloading("#login-normal",false);
                        $("#alertJSLogin").html(alertJS(data.msg,'danger'));
                }else{
                        buttonloading("#login-normal",false);
                        $("#alertJSLogin").html(alertJS("Máy chủ không thể thực hiện đăng nhập!",'danger'));
                    }
            },
            error: function(er){
                    buttonloading("#login-normal",false);
                    $("#alertJSLogin").html(alertJS("Máy chủ không thể thực hiện đăng nhập!",'danger'));
            }
        });
    });
    $("#buttonRegister").on('click',function(e){
        $(".alertJSRegister").empty();
        var formData = new FormData($("#formRegister")[0]);
        buttonloading("#buttonRegister",true);
        $.ajax({
                url:$("#buttonRegister").attr('data-url'),
                type: "POST",
                data:formData,
                dataType:'JSON',
                processData: false,
                contentType: false,
                success: function(data){
                    if(data.status === 'success'){
                        $(".alertJSRegister").html(alertJS(data.msg,'success'));
                        setTimeout(function name(params) {
                            return window.location.href = data.url;
                        },3000)
                    }else{
                        $(".alertJSRegister").html(alertJS(data.msg,'danger'));
                    }
                },
                error: function(er){
                    _showError(er,"#formRegister");
                    buttonloading("#buttonRegister",false);
                }
        });
    });
    $("._buttonSave").on('click',function(){
        var button = this;
        var id  = $(this).attr('data-id');
        var status  = $(this).attr('data-status');
        var url  = $(this).attr('data-url');
        if(status=='login'){
            $("#popup-login").modal('show');
            return false;
        }
        var formData = new FormData();
        formData.append('id',id);
        formData.append('status',status);
        // formData.append('id',id);
        buttonloading(button,true);
        $.ajax({
                url:url,
                type: "POST",
                data:formData,
                dataType:'JSON',
                processData: false,
                contentType: false,
                success: function(data){
                    if(data.status === 'success'){
                        buttonloading(button,false);
                        if(status=='add'){
                            $(button).html('Bỏ lưu <i class="icon-like text-danger"></i>');
                            $(button).attr('data-status','delete');
                        }else{
                            $(button).attr('data-status','add');
                            $(button).html('Lưu tin <i class="icon-like"></i>');
                        }
                    }else{
                       alert("Lỗi máy chủ !");
                    }
                },
                error: function(er){
                    alert("Lỗi máy chủ !");
                    buttonloading(button,false);
                }
        });
    });
    $("#formSubscribe").on('submit',function(e){
        e.preventDefault();
        AntispamJSON.url=$(this).attr('action');
        AntispamJSON.form="#formSubscribe";
        AntispamJSON.button="#buttonSubscribe";
        AntispamJSON.alertJS="#alertJSSubscribe";
        AntispamJSON.resultMath="";
        AntispamJS(AntispamJSON);
    });
    $("#formSubscribeNews").on('submit',function(e){
        e.preventDefault();
        AntispamJSON.url=$(this).attr('action');
        AntispamJSON.form="#formSubscribeNews";
        AntispamJSON.button="#buttonSubscribeNews";
        AntispamJSON.alertJS="#alertJSSubscribeNews";
        AntispamJSON.resultMath="";
        AntispamJS(AntispamJSON);
    });
});



